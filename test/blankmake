##### CONSTANT BOILER PLATE #######
DIRPATH=.\..\src
BINPATH=.\..\bin
OBJPATH=.\..\obj
TESTDIR=.
TEST_BINPATH=$(TESTDIR)\bin
TEST_OBJPATH=$(TESTDIR)\obj

FILENAME=kata
TESTNAME=kata_test


### app file ending ###
# $(MAKE_CALL) code here 
!ifndef 0 # \	
EXE_FILETYPE=.exe # \
!else
# Make code here 
EXE_FILETYPE=#
#
!endif


INCL= 
CC=gcc
CFLAGS= #-I $(INCL)


TESTBIN=$(TEST_OBJPATH)\$(TESTNAME).o
CTEST=$(TESTDIR)\$(TESTNAME).c
TEST_EXE=$(TEST_BINPATH)\$(TESTNAME)$(EXE_FILETYPE)

SOURCES = $(CTEST)
HEADERS = 
APPS = $(TEST_EXE)

FILEBIN=$(OBJPATH)\$(FILENAME).o
CFILE=$(DIRPATH)\$(FILENAME).c
FILE_EXE=$(BINPATH)\$(FILENAME)$(EXE_FILETYPE)

SOURCES = $(SOURCES) $(CFILE)
HEADERS = $(HEADERS) 
APPS = $(APPS) $(FILE_EXE)


##### VARYING FILE BOILER PLATE #######
OBJ1PATH=$(DIRPATH)\OOP
OBJ1NAME=oop
OBJ1SRC=$(OBJ1PATH)\$(OBJ1NAME).c
OBJ1HDR=$(OBJ1PATH)\$(OBJ1NAME).h
OBJ1=$(OBJPATH)\$(OBJ1NAME).o

SOURCES = $(SOURCES) $(OBJ1SRC)
HEADERS = $(HEADERS) $(OBJ1HDR)
OBJECTS = $(OBJECTS) $(OBJ1)
OBJSRCS = $(SOURCES) $(OBJ1SRC)
OBJBUILDS = 1


OBJ2PATH=$(DIRPATH)\FunctionalProgramming
OBJ2NAME=func_prog
OBJ2SRC=$(OBJ2PATH)\$(OBJ2NAME).c
OBJ2HDR=$(OBJ2PATH)\$(OBJ2NAME).h
OBJ2=$(OBJPATH)\$(OBJ2NAME).o

SOURCES = $(SOURCES) $(OBJ2SRC)
HEADERS = $(HEADERS) $(OBJ2HDR)
OBJECTS = $(OBJECTS) $(OBJ2)
OBJSRCS = $(SOURCES) $(OBJ1SRC)
OBJBUILDS = $(OBJBUILDS) 2



CLASS1DIR=$(OBJ1PATH)\classes

OBJ3PATH=$(CLASS1DIR)
OBJ3NAME=Statistics
OBJ3SRC=$(CLASS1DIR)\$(OBJ3NAME).c
OBJ3HDR=$(CLASS1DIR)\$(OBJ3NAME).h
OBJ3=$(OBJPATH)\$(OBJ3NAME).o

SOURCES = $(SOURCES) $(OBJ3SRC)
HEADERS = $(HEADERS) $(OBJ3HDR)
OBJECTS = $(OBJECTS) $(OBJ3)
OBJSRCS = $(SOURCES) $(OBJ3SRC)
OBJBUILDS = $(OBJBUILDS) 3


OBJ4PATH=$(CLASS1DIR)
OBJ4NAME=Book
OBJ4SRC=$(CLASS1DIR)\$(OBJ4NAME).c
OBJ4HDR=$(CLASS1DIR)\$(OBJ4NAME).h
OBJ4=$(OBJPATH)\$(OBJ4NAME).o

SOURCES = $(SOURCES) $(OBJ4SRC)
HEADERS = $(HEADERS) $(OBJ4HDR)
OBJECTS = $(OBJECTS) $(OBJ4)
OBJSRCS = $(SOURCES) $(OBJ4SRC)
OBJBUILDS = $(OBJBUILDS) 4


OBJ5PATH=$(CLASS1DIR)
OBJ5NAME=MemBook
OBJ5SRC=$(CLASS1DIR)\$(OBJ5NAME).c
OBJ5HDR=$(CLASS1DIR)\$(OBJ5NAME).h
OBJ5=$(OBJPATH)\$(OBJ5NAME).o

SOURCES = $(SOURCES) $(OBJ5SRC)
HEADERS = $(HEADERS) $(OBJ5HDR)
OBJECTS = $(OBJECTS) $(OBJ5)
OBJSRCS = $(SOURCES) $(OBJ5SRC)
OBJBUILDS = $(OBJBUILDS) 5



CLASS2DIR=$(OBJ1PATH)\MyClasses

OBJ6PATH=$(CLASS2DIR)
OBJ6NAME=AuxClass
OBJ6SRC=$(CLASS2DIR)\$(OBJ6NAME).c
OBJ6HDR=$(CLASS2DIR)\$(OBJ6NAME).h
OBJ6=$(OBJPATH)\$(OBJ6NAME).o

SOURCES = $(SOURCES) $(OBJ6SRC)
HEADERS = $(HEADERS) $(OBJ6HDR)
OBJECTS = $(OBJECTS) $(OBJ6)
OBJSRCS = $(SOURCES) $(OBJ6SRC)
OBJBUILDS = $(OBJBUILDS) 6


OBJ7PATH=$(CLASS2DIR)
OBJ7NAME=BaseClass
OBJ7SRC=$(CLASS2DIR)\$(OBJ7NAME).c
OBJ7HDR=$(CLASS2DIR)\$(OBJ7NAME).h
OBJ7=$(OBJPATH)\$(OBJ7NAME).o

SOURCES = $(SOURCES) $(OBJ7SRC)
HEADERS = $(HEADERS) $(OBJ7HDR)
OBJECTS = $(OBJECTS) $(OBJ7)
OBJSRCS = $(SOURCES) $(OBJ7SRC)
OBJBUILDS = $(OBJBUILDS) 7


OBJ8PATH=$(CLASS2DIR)
OBJ8NAME=SomeClass
OBJ8SRC=$(CLASS2DIR)\$(OBJ8NAME).c
OBJ8HDR=$(CLASS2DIR)\$(OBJ8NAME).h
OBJ8=$(OBJPATH)\$(OBJ8NAME).o

SOURCES = $(SOURCES) $(OBJ8SRC)
HEADERS = $(HEADERS) $(OBJ8HDR)
OBJECTS = $(OBJECTS) $(OBJ8)
OBJSRCS = $(SOURCES) $(OBJ8SRC)
OBJBUILDS = $(OBJBUILDS) 8



##### VARYING FILE BOILER PLATE #######
TST_OBJ0PATH=$(TESTDIR)
TST_OBJ0NAME=test
TST_OBJ0SRC=$(TST_OBJ0PATH)\$(TST_OBJ0NAME).c
TST_OBJ0HDR=$(TST_OBJ0PATH)\$(TST_OBJ0NAME).h
TST_OBJ0=$(TEST_OBJPATH)\$(TST_OBJ0NAME).o

SOURCES = $(SOURCES) $(TST_OBJ0SRC)
HEADERS = $(HEADERS) $(TST_OBJ0HDR)
TST_OBJECTS = $(TST_OBJ0)
OBJSRCS = $(SOURCES) $(TST_OBJ0SRC)
TST_OBJBUILDS = 0


TST_OBJ1PATH=$(TESTDIR)\OOP
TST_OBJ1NAME=test_$(OBJ1NAME)
TST_OBJ1SRC=$(TST_OBJ1PATH)\$(TST_OBJ1NAME).c
TST_OBJ1HDR=$(TST_OBJ1PATH)\$(TST_OBJ1NAME).h
TST_OBJ1=$(TEST_OBJPATH)\$(TST_OBJ1NAME).o

SOURCES = $(SOURCES) $(TST_OBJ1SRC)
HEADERS = $(HEADERS) $(TST_OBJ1HDR)
TST_OBJECTS = $(TST_OBJECTS) $(TST_OBJ1)
OBJSRCS = $(SOURCES) $(TST_OBJ1SRC)
TST_OBJBUILDS = $(TST_OBJBUILDS) 1


TST_OBJ2PATH=$(TESTDIR)\FunctionalProgramming
TST_OBJ2NAME=test_$(OBJ2NAME)
TST_OBJ2SRC=$(TST_OBJ2PATH)\$(TST_OBJ2NAME).c
TST_OBJ2HDR=$(TST_OBJ2PATH)\$(TST_OBJ2NAME).h
TST_OBJ2=$(TEST_OBJPATH)\$(TST_OBJ2NAME).o

SOURCES = $(SOURCES) $(TST_OBJ2SRC)
HEADERS = $(HEADERS) $(TST_OBJ2HDR)
TST_OBJECTS = $(TST_OBJECTS) $(TST_OBJ2)
OBJSRCS = $(SOURCES) $(TST_OBJ2SRC)
TST_OBJBUILDS = $(TST_OBJBUILDS) 2



# Code below should allow $(MAKE_CALL) and make to operate successfully
# $(MAKE_CALL) code here \
!ifndef 0# \
MV = move # \
RM=del # \
RMDIR=rmdir # \
CP=copy # \
MAKE_CALL=nmake # \
!else
ifeq (0,0) #
# Make code here 
MV=mv -f # 
RM=rm -f #
RMDIR=rm -rf
CP=cp -f # 
MAKE_CALL=make #
endif #
# \
!endif 



##### CONSTANT BUILD #######
MAKE: $(FILEBIN) $(TESTBIN) $(OBJECTS) $(TST_OBJECTS)
	$(CC) $(CFLAGS) $(FILEBIN) $(OBJECTS) -o $(FILE_EXE)
	$(CC) $(CFLAGS) $(TESTBIN) $(OBJECTS) $(TST_OBJECTS) -o $(TEST_EXE)
	$(MAKE_CALL) clean_up

MAKE_OBJ: $(FILEBIN) $(TESTBIN) $(OBJECTS)
	$(CC) $(CFLAGS) $(FILEBIN) $(OBJECTS) -o $(FILE_EXE)
	$(CC) $(CFLAGS) $(TESTBIN) $(OBJECTS) -o $(TEST_EXE)

fast: $(TESTBIN) $(OBJECTS)
	$(CC) $(CFLAGS) $(TESTBIN) $(OBJECTS) -o $(TEST_EXE)
	$(MAKE_CALL) clean_up

$(FILEBIN): $(CFILE)
	$(MAKE_CALL) BUILD_DIR
	$(MAKE_CALL) build
	$(CC) -c $(CFLAGS) $(CFILE) -o $(FILEBIN)

$(TESTBIN): $(CTEST)
	$(MAKE_CALL) build
	$(CC) -c $(CFLAGS) $(CTEST) -o $(TESTBIN)
	$(MAKE_CALL) BUILD_OBJ

build::
	$(CP) blankmake Makefile
	FOR %%i IN ($(TST_OBJBUILDS))\
		DO \
		@echo( $$(CC) $$(CFLAGS) -c $$(TST_OBJ%%iSRC) -o $$(TST_OBJ%%i) >> Makefile
	FOR %%i IN ($(OBJBUILDS))\
		DO \
		@echo( $$(CC) $$(CFLAGS) -c $$(OBJ%%iSRC) -o $$(OBJ%%i) >> Makefile

run:
	($(FILE_EXE))

test:
	($(TEST_EXE))

clean:
	$(RM) $(APPS) 
	$(RMDIR) $(BINPATH) $(TEST_BINPATH)

clean_up:
	$(RM) $(FILEBIN) $(TESTBIN) $(OBJECTS) $(TST_OBJECTS) 
	$(RMDIR) $(OBJPATH) $(TEST_OBJPATH)

clean_all:
	$(MAKE_CALL) clean_up
	$(MAKE_CALL) clean

BUILD_DIR:
	mkdir $(BINPATH)
	mkdir $(OBJPATH)
	mkdir $(TEST_BINPATH)
	mkdir $(TEST_OBJPATH)
	
BUILD_OBJ: 
	@echo building...
#####	VARIABLE BUILD	#####
